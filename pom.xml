<?xml version='1.0' encoding='UTF-8'?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<modelVersion>4.0.0</modelVersion>

	<groupId>org.eclipse.californium</groupId>
	<artifactId>parent</artifactId>
	<version>1.0.0.QIVICON-SNAPSHOT</version>
	<!-- 
	<version>1.1.0-SNAPSHOT</version>
	-->
	<packaging>pom</packaging>

	<name>Californium (Cf) Parent</name>
	<description>Common definitions and configuration for all Californium (Cf) components</description>
	<url>https://www.eclipse.org/californium/</url>
	<organization>
		<name>Eclipse Foundation</name>
		<url>http://www.eclipse.org/</url>
	</organization>
	<licenses>
		<license>
			<name>Eclipse Public License - Version 1.0</name>
			<url>http://www.eclipse.org/org/documents/epl-v10.php</url>
		</license>
		<license>
			<name>Eclipse Distribution License - Version 1.0</name>
			<url>http://www.eclipse.org/org/documents/edl-v10.php</url>
		</license>
	</licenses>
	<scm>
		<developerConnection>scm:git:ssh://git@github.com/eclipse/californium.git</developerConnection>
		<url>https://github.com/eclipse/californium</url>
		<tag>HEAD</tag>
	</scm>
	<issueManagement>
		<system>Bugzilla</system>
		<url>https://bugs.eclipse.org/bugs/buglist.cgi?product=Californium</url>
	</issueManagement>
	<ciManagement>
		<system>Hudson</system>
		<url>https://hudson.eclipse.org/californium/</url>
	</ciManagement>
	<developers>
		<developer>
			<id>mkovatsch</id>
			<name>Matthias Kovatsch</name>
			<email>kovatsch@inf.ethz.ch</email>
			<url>http://people.inf.ethz.ch/mkovatsc/</url>
			<organization>ETH Zurich</organization>
			<organizationUrl>http://www.vs.inf.ethz.ch/</organizationUrl>
			<roles>
				<role>Committer</role>
				<role>Lead</role>
			</roles>
		</developer>
		<developer>
			<id>mlanter</id>
			<name>Martin Lanter</name>
			<email>martin.lanter@gmx.ch</email>
			<roles>
				<role>Committer</role>
			</roles>
		</developer>
		<developer>
			<id>jvermillard</id>
			<name>Julien Vermillard</name>
			<email>jvermillar@sierrawireless.com</email>
			<organization>Sierra Wireless</organization>
			<roles>
				<role>Committer</role>
			</roles>
		</developer>
		<developer>
			<id>khudalla</id>
			<name>Kai Hudalla</name>
			<email>kai.hudalla@bosch-si.com</email>
			<url>https://github.com/sophokles73</url>
			<organization>Bosch Software Innovations GmbH</organization>
			<organizationUrl>http://www.bosch-si.com</organizationUrl>
			<roles>
				<role>Committer</role>
			</roles>
		</developer>
		<developer>
			<id>sbernard</id>
			<name>Simon Bernard</name>
			<email>sbernard@sierrawireless.com</email>
			<organization>Sierra Wireless</organization>
			<roles>
				<role>Committer</role>
			</roles>
		</developer>
		<developer>
			<id>boaks</id>
			<name>Achim Kraus</name>
			<email>achim.kraus@bosch-si.com</email>
			<organization>Bosch Software Innovations GmbH</organization>
			<organizationUrl>http://www.bosch-si.com</organizationUrl>
			<roles>
				<role>Committer</role>
			</roles>
		</developer>
	</developers>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.build.javaVersion>1.7</project.build.javaVersion>
		<snapshotDependencyAllowed>true</snapshotDependencyAllowed>
		
		
		<tycho-version>1.0.0</tycho-version>
		<tycho-groupid>org.eclipse.tycho</tycho-groupid>
		<tycho.testArgLine></tycho.testArgLine>
		<maven.build.timestamp.format>yyyyMMddHHmm</maven.build.timestamp.format>
		
		<nexus.host>qivicon-wbench.psst.t-online.corp</nexus.host>
		<qivicon.orbit.p2.repository.url>http://${nexus.host}/nexus/content/unzip/2ndparty_unzip/com/qivicon/orbit/com.qivicon.orbit.repo/${qivicon.orbit.version}/com.qivicon.orbit.repo-${qivicon.orbit.version}.zip-unzip/</qivicon.orbit.p2.repository.url>
		<esh.version>SNAPSHOT</esh.version>
		<runtime.crs.version>SNAPSHOT</runtime.crs.version>
		<prosyst.repository.version>SNAPSHOT</prosyst.repository.version>
		<qivicon.orbit.version>1.0.25</qivicon.orbit.version>
		<jersey.optimized.version>1.0.4</jersey.optimized.version>
		<!-- p2 repository urls -->
		<esh.p2.repository.url>http://${nexus.host}/nexus/content/unzip/snapshots_unzip/org/eclipse/smarthome/products/org.eclipse.smarthome.repo/${esh.version}/org.eclipse.smarthome.repo-${esh.version}.zip-unzip/</esh.p2.repository.url>
		<runtime.crs.p2.repository.url>http://${nexus.host}/nexus/content/unzip/s_snapshots_unzip/com/qivicon/runtime/crs/com.qivicon.runtime.crs.repository/${runtime.crs.version}/com.qivicon.runtime.crs.repository-${runtime.crs.version}.zip-unzip/</runtime.crs.p2.repository.url>
		<prosyst.p2.repository.url>http://${nexus.host}/nexus/content/unzip/snapshots_unzip/com/qivicon/runtime/prosyst-repository/${prosyst.repository.version}/prosyst-repository-${prosyst.repository.version}-bin.zip-unzip/</prosyst.p2.repository.url>
		<!-- always using release versions from following repositories -->
		<jersey.optimized.p2.repository.url>http://${nexus.host}/nexus/content/unzip/2ndparty_unzip/com/qivicon/jersey/com.qivicon.jersey.optimized.product/${jersey.optimized.version}/com.qivicon.jersey.optimized.product-${jersey.optimized.version}.zip-unzip/</jersey.optimized.p2.repository.url>
	</properties>
		

	<distributionManagement>
		<snapshotRepository>
			<id>nexus-sec-snapshots</id>
			<name>Nexus Secure Staging Repo</name>
			<url>http://${nexus.host}/nexus/content/repositories/s_snapshots/</url>
			<uniqueVersion>false</uniqueVersion>
		</snapshotRepository>
		<repository>
			<id>nexus-sec-releases</id>
			<name>Nexus Secure Release Repo</name>
			<url>http://${nexus.host}/nexus/content/repositories/s_2ndparty/</url>
		</repository>
	</distributionManagement>

	

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.12</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>demo-certs</artifactId>
				<version>${project.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-library</artifactId>
				<version>1.3</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>element-connector</artifactId>
				<version>${project.version}</version>
				<scope>test</scope>
				<classifier>tests</classifier>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>element-connector</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>1.9.5</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<modules>
		<module>element-connector</module>
		<module>scandium-core</module>
		<module>californium-core</module>
		<module>californium-proxy</module>
		<module>californium-osgi</module>
		<module>demo-apps</module>
		<module>demo-certs</module>
	</modules>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.3</version>
					<configuration>
						<source>${project.build.javaVersion}</source>
						<target>${project.build.javaVersion}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.4</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>verify</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.18.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>3.0.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.10.3</version>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.5.5</version>
					<inherited>true</inherited>
					<configuration>
						<appendAssemblyId>false</appendAssemblyId>
						<archive>
							<manifest>
								<addClasspath>true</addClasspath>
								<mainClass>${assembly.mainClass}</mainClass>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
						</archive>
						<descriptorRefs>
							<descriptorRef>jar-with-dependencies</descriptorRef>
						</descriptorRefs>
					</configuration>
					<executions>
						<execution>
							<id>make-assembly</id>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.4.1</version>
				<executions>
					<execution>
						<!-- Make sure that only non-snapshot versions are used for the dependencies. 
							Only active when property 'snapshotDependencyAllowed' is false. -->
						<id>enforce-no-snapshots</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<skip>${snapshotDependencyAllowed}</skip>
							<rules>
								<requireReleaseDeps>
									<message>No Snapshots Allowed!</message>
								</requireReleaseDeps>
								<requireReleaseVersion>
									<message>No Snapshots Allowed!</message>
								</requireReleaseVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
			<!--
			<plugin>
				 
					Use the Nexus Staging plugin as a full replacement for the standard
					Maven Deploy plugin.
					See https://github.com/sonatype/nexus-maven-plugins/tree/master/staging/maven-plugin
					why this makes sense :-)
					We can control whether we want to deploy to the Eclipse repo or Maven Central
					by a combination of the version being a SNAPHOT or release version and property
					skipStaging=true/false.
					In any case we can take advantage of the plugin's "deferred deploy" feature which
					makes sure that all artifacts of a multi-module project are deployed as a whole
					at the end of the build process instead of deploying each module's artifacts
					individually as part of building the module.
				
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.6.5</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>false</autoReleaseAfterClose>
				</configuration>
			</plugin>
			-->
		</plugins>
	</build>

	<profiles>
		<profile>
			<!--
				this profile generates javadoc to check integrity
				sub-modules can set property maven.javadoc.skip=true in order to skip this
				(e.g., the executable examples, which do not require Javadoc)
			-->
			<id>javadoc</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>createJavadoc</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- this profile signs artifacts so that they can be deployed to repo.eclipse.org -->
			<id>eclipse_jar_signing</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>enableEclipseJarSigner</name>
				</property>
			</activation>
			<pluginRepositories>
				<pluginRepository>
					<id>eclipse-repo</id>
					<name>Eclipse Repository</name>
					<releases>
						<enabled>true</enabled>
					</releases>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
					<url>https://repo.eclipse.org/content/repositories/releases/</url>
				</pluginRepository>
			</pluginRepositories>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.cbi.maven.plugins</groupId>
						<artifactId>eclipse-jarsigner-plugin</artifactId>
						<version>1.1.2</version>
						<executions>
							<execution>
								<id>sign-jars</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- this profile generates GPG signatures -->
			<id>create_gpg_signature</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>createGPGSignature</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>Release</id>
			<properties>
				<packageVersion>AUTO</packageVersion>
				<packageRepositoryUrl>http://${nexus.host}/nexus/content/repositories/spkg_rel/</packageRepositoryUrl>
				<packageRepositoryId>nexus-sec-releases</packageRepositoryId>
			</properties>
		</profile>
		<profile>
			<id>tarot</id>
			<modules>
				<module>tarot</module>
			</modules>
		</profile>
		<profile>
			<id>snapshot-version</id>
			<properties>
				<sprint-number>0</sprint-number>
				<hotfix-number>0</hotfix-number>
				<maven.build.timestamp.format>yyyyMMddHHmm</maven.build.timestamp.format>
				<snapshot-build-version>1.${sprint-number}.${hotfix-number}-SNAPSHOT</snapshot-build-version>
				<includesList>com.qivicon*:*</includesList>
				<newVersion>${snapshot-build-version}</newVersion>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>tycho-versions-plugin</artifactId>
						<version>${tycho-version}</version>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>release-version</id>
			<properties>
				<sprint-number>0</sprint-number>
				<hotfix-number>0</hotfix-number>
				<maven.build.timestamp.format>yyyyMMddHHmm</maven.build.timestamp.format>
				<release-build-version>1.${sprint-number}.${hotfix-number}.${maven.build.timestamp}</release-build-version>
				<includesList>com.qivicon*:*</includesList>
				<newVersion>${release-build-version}</newVersion>
				<esh.p2.repository.url>http://${nexus.host}/nexus/content/unzip/2ndparty_unzip/org/eclipse/smarthome/products/org.eclipse.smarthome.repo/${esh.version}/org.eclipse.smarthome.repo-${esh.version}.zip-unzip/</esh.p2.repository.url>
				<!-- until we do not have release version of runtime.crs, qivicon.orbit 
					and prosyst.repository we use the snapshot versions. Once we release it, 
					we have to adapt the urls to the release repositories on nexus! -->
				<runtime.crs.p2.repository.url>http://${nexus.host}/nexus/content/unzip/s_snapshots_unzip/com/qivicon/runtime/crs/com.qivicon.runtime.crs.repository/${runtime.crs.version}/com.qivicon.runtime.crs.repository-${runtime.crs.version}.zip-unzip/</runtime.crs.p2.repository.url>
				<prosyst.p2.repository.url>http://${nexus.host}/nexus/content/unzip/snapshots_unzip/com/qivicon/runtime/prosyst-repository/${prosyst.repository.version}/prosyst-repository-${prosyst.repository.version}-bin.zip-unzip</prosyst.p2.repository.url>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>tycho-versions-plugin</artifactId>
						<version>${tycho-version}</version>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	
	<repositories>
		<repository>
			<id>eclipse_snapshots</id>
			<name>Eclipse Snapshots</name>
			<url>https://repo.eclipse.org/content/repositories/snapshots/</url>
		</repository>
		<repository>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>central</id>
			<name>Maven Repository Switchboard</name>
			<url>http://repo1.maven.org/maven2</url>
		</repository>
		<repository>
			<id>qivicon-orbit</id>
			<url>${qivicon.orbit.p2.repository.url}</url>
			<layout>p2</layout>
		</repository>
		<repository>
			<id>p2-sec-snapshots</id>
			<url>${runtime.crs.p2.repository.url}</url>
			<layout>p2</layout>
		</repository>
		<repository>
			<id>ProSyst Repository</id>
			<url>${prosyst.p2.repository.url}</url>
			<layout>p2</layout>
		</repository>
		<repository>
			<id>EclipseSmarthome Qivicon</id>
			<url>${esh.p2.repository.url}</url>
			<layout>p2</layout>
		</repository>
		<repository>
			<id>Jersey-Optimized</id>
			<url>${jersey.optimized.p2.repository.url}</url>
			<layout>p2</layout>
		</repository>		
	</repositories>
	
	
	
</project>
